{"version":3,"sources":["redux/actions/transactions.js","redux/reducers/index.js","redux/actions/exchangeRate.js","redux/actions/filters.js","redux/reducers/exchangeRate.js","redux/reducers/filters.js","redux/reducers/transactions.js","redux/reducers sync /^/.*$","redux/store.js","components/Transaction/Transaction.jsx","components/ExchangeRate/ExchangeRate.jsx","components/TransactionsList/TransactionsList.jsx","components/TotalAmount/TotalAmount.jsx","components/Pagination/Pagination.jsx","components/ToggleTopTransactions/ToggleTopTransactions.jsx","components/FilterByTitle/FilterByTitle.jsx","containers/Transaction/Transaction.js","containers/ExchangeRate/ExchangeRate.js","containers/TransactionsList/TransactionsList.js","containers/TotalAmount/TotalAmount.js","containers/LargestTotal/LargestTotal.js","containers/Pagination/Pagination.js","containers/ToggleTopTransactions/ToggleTopTransactions.js","containers/FilterByTitle/FilterByTitle.js","App.jsx","index.js"],"names":["REMOVE_TRANSACTION","SET_TRANSACTIONS_LIST","SET_TOP_TRANSACTIONS","SET_TOP_TRANSACTIONS_LIST","SET_LARGEST_TRANSACTIONS_LIST","SET_PAGES_CONTENT","SET_CURRENT_PAGE","setTransactionsList","transaction","type","payload","removeTransaction","id","setTopTransactionsList","transactions","setLargestTransactions","setTopTransactions","top","combineReducers","reduce","initial","name","require","default","SET_EXCHANGE_RATE","setExchangeRate","rate","SET_QUERY","setQuery","query","initialState","state","topTransactions","largestTrasactions","pagesContent","currentPage","filter","obj","_id","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Transactions","onNameChange","onAmountChange","onTransactionAdded","amount","error","className","onSubmit","placeholder","onChange","target","value","required","step","ExchangeRate","pln","onRateChange","defaultValue","readOnly","TransactionsList","transactionsList","canRemove","item","key","shortid","generate","title","euro","toFixed","Number","onClick","TotalAmount","totalAmount","Pagination","ToggleTopTransactions","top1","top5","toggle","disabled","FilterByTitle","onQueryChange","useState","setName","setAmount","setError","dispatch","useDispatch","event","preventDefault","length","Date","getTime","useSelector","exchangeRate","setRate","onSetExchangeRate","filters","filterTransactions","setFilterTransactions","useEffect","onSortTransactionsList","slice","sort","a","b","sortTopTransactions","onAddLargestTransactions","Math","max","largestTransactions","toLowerCase","indexOf","onFilterTransactions","onChangeQuery","sum","current","total","LargestTotal","topTransactionsList","setTop1","setTop5","onToggleTop","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9980b58.chunk.js","sourcesContent":["export const REMOVE_TRANSACTION = \"TRANSACTIONS:REMOVE_TRANSACTION\"\r\nexport const SET_TRANSACTIONS_LIST = \"TRANSACTIONS:SET_TRANSACTIONS_LIST\"\r\nexport const SET_TOP_TRANSACTIONS = \"TRANSACTIONS:SET_TOP_TRANSACTIONS\"\r\nexport const SET_TOP_TRANSACTIONS_LIST =\r\n  \"TRANSACTIONS:SET_TOP_TRANSACTIONS_LIST\"\r\nexport const SET_LARGEST_TRANSACTIONS_LIST =\r\n  \"TRANSACTIONS:SET_LARGEST_TRANSACTIONS_LIST\"\r\n\r\nexport const SET_PAGES_CONTENT = \"TRANSACTIONS:SET_PAGES_CONTENT\"\r\nexport const SET_CURRENT_PAGE = \"TRANSACTIONS:SET_CURRENT_PAGE\"\r\n\r\nexport const setTransactionsList = (transaction) => ({\r\n  type: SET_TRANSACTIONS_LIST,\r\n  payload: transaction,\r\n})\r\n\r\nexport const removeTransaction = (id) => ({\r\n  type: REMOVE_TRANSACTION,\r\n  payload: id,\r\n})\r\n\r\nexport const setTopTransactionsList = (transactions) => ({\r\n  type: SET_TOP_TRANSACTIONS_LIST,\r\n  payload: transactions,\r\n})\r\n\r\nexport const setLargestTransactions = (transactions) => ({\r\n  type: SET_LARGEST_TRANSACTIONS_LIST,\r\n  payload: transactions,\r\n})\r\n\r\nexport const setTopTransactions = (top) => ({\r\n  type: SET_TOP_TRANSACTIONS,\r\n  payload: top,\r\n})\r\n\r\nexport const setPagesContent = (transactions) => ({\r\n  type: SET_PAGES_CONTENT,\r\n  payload: transactions,\r\n})\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  payload: currentPage,\r\n})\r\n","import { combineReducers } from \"redux\"\r\n\r\nconst reducers = [\"exchangeRate\", \"transactions\", \"filters\"]\r\n\r\nexport default combineReducers(\r\n  reducers.reduce((initial, name) => {\r\n    initial[name] = require(`./${name}`).default\r\n    return initial\r\n  }, {})\r\n)\r\n","export const SET_EXCHANGE_RATE = \"EXCHANGE_RATE:SET_EXCHANGE_RATE\"\r\n\r\nexport const setExchangeRate = (rate) => ({\r\n  type: SET_EXCHANGE_RATE,\r\n  payload: rate,\r\n})\r\n","export const SET_QUERY = \"FILTER:SET_QUERY\"\r\n\r\nexport const setQuery = (query) => ({\r\n  type: SET_QUERY,\r\n  payload: query,\r\n})\r\n","import { SET_EXCHANGE_RATE } from \"../actions/exchangeRate\"\r\n\r\nconst initialState = {\r\n  rate: 4.3,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        rate: payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SET_QUERY } from \"../actions/filters\"\r\n\r\nconst initialState = {\r\n  query: \"\",\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_QUERY:\r\n      return {\r\n        ...state,\r\n        query: payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  REMOVE_TRANSACTION,\r\n  SET_TRANSACTIONS_LIST,\r\n  SET_TOP_TRANSACTIONS,\r\n  SET_TOP_TRANSACTIONS_LIST,\r\n  SET_LARGEST_TRANSACTIONS_LIST,\r\n  SET_PAGES_CONTENT,\r\n  SET_CURRENT_PAGE,\r\n} from \"../actions/transactions\"\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n  top: 1,\r\n  topTransactions: [],\r\n  largestTrasactions: [],\r\n  pagesContent: {},\r\n  currentPage: 1,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_TRANSACTIONS_LIST:\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, payload],\r\n      }\r\n\r\n    case REMOVE_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter((obj) => obj._id !== payload),\r\n      }\r\n    case SET_TOP_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        top: payload,\r\n      }\r\n    case SET_TOP_TRANSACTIONS_LIST:\r\n      return {\r\n        ...state,\r\n        topTransactions: payload,\r\n      }\r\n    case SET_LARGEST_TRANSACTIONS_LIST:\r\n      return {\r\n        ...state,\r\n        largestTrasactions: payload,\r\n      }\r\n    case SET_PAGES_CONTENT:\r\n      return {\r\n        ...state,\r\n        pagesContent: payload,\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","var map = {\n\t\"./\": 6,\n\t\"./exchangeRate\": 18,\n\t\"./exchangeRate.js\": 18,\n\t\"./filters\": 19,\n\t\"./filters.js\": 19,\n\t\"./index\": 6,\n\t\"./index.js\": 6,\n\t\"./transactions\": 20,\n\t\"./transactions.js\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 36;","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnchancers(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import React from \"react\"\r\n\r\nimport \"./transaction.scss\"\r\n\r\nconst Transactions = ({\r\n  onNameChange,\r\n  onAmountChange,\r\n  onTransactionAdded,\r\n  name,\r\n  amount,\r\n  error,\r\n}) => {\r\n  return (\r\n    <form className=\"transaction\" onSubmit={onTransactionAdded}>\r\n      <div className=\"error-message\">{error}</div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"transaction__name\"\r\n          placeholder=\"Transaction name\"\r\n          onChange={(e) => {\r\n            onNameChange(e.target.value)\r\n          }}\r\n          value={name}\r\n          name=\"title\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          className=\"transaction__amount\"\r\n          placeholder=\"0.00 Euro\"\r\n          step=\"0.01\"\r\n          onChange={(e) => {\r\n            onAmountChange(e.target.value)\r\n          }}\r\n          value={amount}\r\n          required\r\n        />\r\n        <input type=\"submit\" className=\"transaction__add\" value=\"Add\" />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import React from \"react\"\r\n\r\nimport \"./exchangerate.scss\"\r\n\r\nconst ExchangeRate = ({ pln, onRateChange, error }) => {\r\n  return (\r\n    <div className=\"exchange-rate\">\r\n      <div className=\"error-message\">{error}</div>\r\n      <div className=\"exchange-rate__currency\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"exchange-rate__input\"\r\n          defaultValue=\"1.00\"\r\n          readOnly\r\n        />\r\n        <p className=\"exchange-rate__description\">euro</p>\r\n      </div>\r\n      <div className=\"exchange-rate__currency\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"exchange-rate__input\"\r\n          step=\"0.01\"\r\n          value={pln}\r\n          onChange={onRateChange}\r\n        />\r\n        <p className=\"exchange-rate__description\">pln</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExchangeRate\r\n","import React from \"react\"\r\nimport shortid from \"shortid\"\r\n\r\nimport \"./transactionslist.scss\"\r\n\r\nconst TransactionsList = ({\r\n  transactionsList,\r\n  rate,\r\n  removeTransaction,\r\n  canRemove,\r\n}) => {\r\n  return (\r\n    <ul className=\"transactions-list\">\r\n      {transactionsList.map((item) => (\r\n        <li className=\"transactions-list__item\" key={shortid.generate()}>\r\n          <div className=\"transactions-list__title\">{item.title}</div>\r\n          <div className=\"transactions-list__total-euro\">\r\n            EURO: {item.euro.toFixed(2)}\r\n          </div>\r\n          <div className=\"transactions-list__total-pln\">\r\n            PLN: {Number(item.euro * rate).toFixed(2)}\r\n          </div>\r\n          {canRemove ? (\r\n            <button\r\n              className=\"transactions-list__remove\"\r\n              onClick={() => {\r\n                removeTransaction(item._id)\r\n              }}\r\n            >\r\n              X\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TransactionsList\r\n","import React from \"react\"\r\n\r\nimport \"./totalamount.scss\"\r\n\r\nconst TotalAmount = ({ totalAmount, rate }) => {\r\n  return (\r\n    <div className=\"total-amount\">\r\n      <div className=\"total-amount__currency\">\r\n        <div className=\"total-amount__title\">Total amount transactions:</div>\r\n        <span className=\"total-amount__description\">\r\n          {totalAmount.toFixed(2)} (EURO) /{\" \"}\r\n          {Number(totalAmount * rate).toFixed(2)} (PLN)\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TotalAmount\r\n","import React from \"react\"\r\n\r\nimport \"./pagination.scss\"\r\n\r\nconst Pagination = ({ currentPage }) => {\r\n  return (\r\n    <div className=\"pagination\">\r\n      <div className=\"pagination__controller\">List of transactions</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React from \"react\"\r\nimport \"./toggleTopTransactions.scss\"\r\n\r\nconst ToggleTopTransactions = ({ top1, top5, toggle }) => {\r\n  return (\r\n    <div className=\"toggle-transactions\">\r\n      <button\r\n        className=\"toggle-transactions__item\"\r\n        disabled={top1}\r\n        onClick={toggle}\r\n      >\r\n        Top 1\r\n      </button>\r\n      <button\r\n        className=\"toggle-transactions__item\"\r\n        disabled={top5}\r\n        onClick={toggle}\r\n      >\r\n        Top 5\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToggleTopTransactions\r\n","import React from \"react\"\r\nimport \"./filterByTitle.scss\"\r\n\r\nconst FilterByTitle = ({ query, onQueryChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      value={query}\r\n      onChange={({ target }) => {\r\n        onQueryChange(target.value)\r\n      }}\r\n      placeholder=\"Filter transactions by title\"\r\n      className=\"filter-by-title\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default FilterByTitle\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { setTransactionsList } from \"../../redux/actions/transactions\"\r\nimport { Transaction as BaseTransaction } from \"../../components\"\r\n\r\nconst Transactions = () => {\r\n  const [name, setName] = useState(\"\")\r\n  const [amount, setAmount] = useState(0)\r\n  const [error, setError] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onSetTransactionsList = (transaction) => {\r\n    dispatch(setTransactionsList(transaction))\r\n  }\r\n\r\n  const onSetName = (name) => {\r\n    setName(name)\r\n  }\r\n\r\n  const onSetAmount = (amount) => {\r\n    setAmount(amount)\r\n  }\r\n\r\n  const onTransactionAdded = (event) => {\r\n    event.preventDefault()\r\n    if (name.length > 0 && Number(amount) > 0) {\r\n      onSetTransactionsList({\r\n        _id: new Date().getTime(),\r\n        title: name,\r\n        euro: Number(amount),\r\n      })\r\n      setName(\"\")\r\n      setAmount(0)\r\n      setError(\"\")\r\n    } else {\r\n      setError(\r\n        \"Transaction name can't be blank/Amount cannot be 0 or negative.\"\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BaseTransaction\r\n      onNameChange={onSetName}\r\n      onAmountChange={onSetAmount}\r\n      onTransactionAdded={onTransactionAdded}\r\n      name={name}\r\n      amount={amount}\r\n      error={error}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { setExchangeRate } from \"../../redux/actions/exchangeRate\"\r\nimport { ExchangeRate as BaseRate } from \"../../components\"\r\n\r\nconst ExchangeRate = () => {\r\n  const pln = useSelector((state) => state.exchangeRate.rate)\r\n  const [rate, setRate] = useState(pln)\r\n  const [error, setError] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onSetExchangeRate = (value) => {\r\n    dispatch(setExchangeRate(value))\r\n  }\r\n\r\n  const onRateChange = ({ target }) => {\r\n    const { value } = target\r\n    if (value >= 0) {\r\n      setRate(value)\r\n      setError(\"\")\r\n      if (value !== \"0\") {\r\n        onSetExchangeRate(value)\r\n      }\r\n    } else {\r\n      setError(\"Can't be negative.\")\r\n    }\r\n  }\r\n  return <BaseRate pln={rate} onRateChange={onRateChange} error={error} />\r\n}\r\n\r\nexport default ExchangeRate\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  removeTransaction,\r\n  setTopTransactionsList,\r\n  setLargestTransactions,\r\n} from \"../../redux/actions/transactions\"\r\nimport { TransactionsList as BaseTransactionsList } from \"../../components\"\r\n\r\nconst TransactionsList = () => {\r\n  const dispatch = useDispatch()\r\n  const transactions = useSelector((state) => state.transactions.transactions)\r\n  const rate = useSelector((state) => state.exchangeRate.rate)\r\n  const query = useSelector((state) => state.filters.query)\r\n\r\n  const [filterTransactions, setFilterTransactions] = useState(transactions)\r\n\r\n  const onFilterTransactions = (transactions, query) =>\r\n    transactions.filter(\r\n      (transaction) =>\r\n        transaction.title.toLowerCase().indexOf(query.toLowerCase()) >= 0\r\n    )\r\n\r\n  const onChangeQuery = (transactions, query) => {\r\n    if (query.length === 0) {\r\n      setFilterTransactions(transactions)\r\n    } else {\r\n      setFilterTransactions(onFilterTransactions(transactions, query))\r\n    }\r\n  }\r\n\r\n  const onRemoveTransaction = (id) => {\r\n    dispatch(removeTransaction(id))\r\n  }\r\n\r\n  const onSortTransactionsList = (transactions) => {\r\n    dispatch(setTopTransactionsList(transactions))\r\n  }\r\n\r\n  const onAddLargestTransactions = (transactions) => {\r\n    dispatch(setLargestTransactions(transactions))\r\n  }\r\n\r\n  const sortTopTransactions = (transactions) => {\r\n    return transactions\r\n      .slice(0)\r\n      .sort(function (a, b) {\r\n        return b.euro - a.euro\r\n      })\r\n      .slice(0, 5)\r\n  }\r\n\r\n  const largestTransactions = (transactions) => {\r\n    return transactions.filter(\r\n      (item) =>\r\n        Number(item.euro) ===\r\n        Math.max(...transactions.map((item) => Number(item.euro)))\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    onSortTransactionsList(sortTopTransactions(transactions))\r\n    onAddLargestTransactions(largestTransactions(transactions))\r\n  })\r\n\r\n  useEffect(() => {\r\n    onChangeQuery(transactions, query)\r\n    // eslint-disable-next-line\r\n  }, [query, transactions])\r\n\r\n  return (\r\n    <BaseTransactionsList\r\n      transactionsList={filterTransactions}\r\n      rate={rate}\r\n      removeTransaction={onRemoveTransaction}\r\n      canRemove={true}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TransactionsList\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { TotalAmount as BaseTotalAmount } from \"../../components\"\r\n\r\nconst TotalAmount = () => {\r\n  const rate = useSelector((state) => state.exchangeRate.rate)\r\n  const transactions = useSelector((state) => state.transactions.transactions)\r\n\r\n  const total = (totalAmount) => {\r\n    return totalAmount.length > 0\r\n      ? totalAmount.reduce((sum, current) => sum + +current, 0)\r\n      : 0\r\n  }\r\n\r\n  const totalAmount = total(transactions.map((item) => item.euro))\r\n\r\n  return <BaseTotalAmount totalAmount={totalAmount} rate={rate} />\r\n}\r\n\r\nexport default TotalAmount\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { TransactionsList as BaseLargestTotal } from \"../../components\"\r\n\r\nconst LargestTotal = () => {\r\n  const topTransactionsList = useSelector(\r\n    (state) => state.transactions.topTransactions\r\n  )\r\n  const largestTransactions = useSelector(\r\n    (state) => state.transactions.largestTrasactions\r\n  )\r\n  const top = useSelector((state) => state.transactions.top)\r\n  const rate = useSelector((state) => state.exchangeRate.rate)\r\n\r\n  const topTransactions = () => {\r\n    if (top === 1) {\r\n      return largestTransactions\r\n    } else {\r\n      return topTransactionsList\r\n    }\r\n  }\r\n\r\n  return <BaseLargestTotal rate={rate} transactionsList={topTransactions()} />\r\n}\r\n\r\nexport default LargestTotal\r\n","import React from \"react\"\r\n\r\nimport { Pagination as BasePagination } from \"../../components\"\r\n\r\nconst Pagination = () => {\r\n  return <BasePagination />\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { setTopTransactions } from \"../../redux/actions/transactions\"\r\nimport { ToggleTopTransactions as BaseToggleTopTransactions } from \"../../components\"\r\n\r\nconst ToggleTopTransactions = () => {\r\n  const [top1, setTop1] = useState(true)\r\n  const [top5, setTop5] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onToggleTop = (top) => {\r\n    dispatch(setTopTransactions(top))\r\n  }\r\n\r\n  const toggle = () => {\r\n    if (top1) {\r\n      setTop1(false)\r\n      setTop5(true)\r\n      onToggleTop(5)\r\n    } else {\r\n      setTop5(false)\r\n      setTop1(true)\r\n      onToggleTop(1)\r\n    }\r\n  }\r\n\r\n  return <BaseToggleTopTransactions top1={top1} top5={top5} toggle={toggle} />\r\n}\r\n\r\nexport default ToggleTopTransactions\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { setQuery } from \"../../redux/actions/filters\"\r\nimport { FilterByTitle as BaseFilterByTitle } from \"../../components\"\r\n\r\nconst FilterByTitle = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const query = useSelector((state) => state.filters.query)\r\n\r\n  const onQueryChange = (query) => {\r\n    dispatch(setQuery(query))\r\n  }\r\n  return <BaseFilterByTitle query={query} onQueryChange={onQueryChange} />\r\n}\r\n\r\nexport default FilterByTitle\r\n","import React from \"react\"\n\nimport {\n  ExchangeRate,\n  Transaction,\n  TransactionsList,\n  TotalAmount,\n  LargestTotal,\n  Pagination,\n  ToggleTopTransactions,\n  FilterByTitle,\n} from \"./containers\"\nimport \"./style/app.scss\"\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <ExchangeRate />\n      <Transaction />\n      <TotalAmount />\n      <FilterByTitle />\n\n      <div className=\"wrapper-transaction\">\n        <div className=\"transaction__container\">\n          <div className=\"transaction__title\">\n            <Pagination />\n          </div>\n          <TransactionsList />\n        </div>\n        <div className=\"transaction__container\">\n          <div className=\"transaction__title\">\n            <ToggleTopTransactions />\n          </div>\n          <LargestTotal />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"antd/dist/antd.css\"\nimport { Provider } from \"react-redux\"\n\nimport store from \"./redux/store\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}