{"version":3,"sources":["redux/reducers/index.js","redux/reducers/exchangeRate.js","redux/reducers/transactions.js","redux/reducers sync /^/.*$","redux/store.js","redux/actions/exchangeRate.js","redux/actions/transactions.js","components/Transaction/Transaction.jsx","components/ExchangeRate/ExchangeRate.jsx","components/TransactionsList/TransactionsList.jsx","components/LargestTotal/LargestTotal.jsx","components/TotalAmount/TotalAmount.jsx","containers/Transaction/Transaction.js","containers/ExchangeRate/ExchangeRate.js","containers/TransactionsList/TransactionsList.js","containers/TotalAmount/TotalAmount.js","containers/LargestTotal/LargestTotal.js","App.jsx","index.js"],"names":["combineReducers","reduce","initial","name","require","default","initialState","rate","state","type","payload","transactions","filter","obj","_id","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","actions","setExchangeRate","setTransactionsList","transaction","removeTransaction","Transactions","onNameChange","onAmountChange","onTransactionAdded","amount","className","onSubmit","placeholder","onChange","target","value","step","ExchangeRate","pln","onRateChange","defaultValue","readOnly","TransactionsList","transactionsList","item","key","shortid","generate","title","euro","Number","toFixed","onClick","LargestTotal","largestTotal","TotalAmount","totalAmount","connect","transactionsActions","useState","setName","setAmount","event","length","Date","getTime","preventDefault","exchangeRate","exchangeRateActions","setRate","sum","current","Math","max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4031703.chunk.js","sourcesContent":["import { combineReducers } from \"redux\"\r\n\r\nconst reducers = [\"exchangeRate\", \"transactions\"]\r\n\r\nexport default combineReducers(\r\n  reducers.reduce((initial, name) => {\r\n    initial[name] = require(`./${name}`).default\r\n    return initial\r\n  }, {})\r\n)\r\n","const initialState = {\r\n  rate: 4.3,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"EXCHANGE_RATE:SET_EXCHANGE_RATE\":\r\n      return {\r\n        ...state,\r\n        rate: payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  transactions: [],\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"TRANSACTIONS:SET_TRANSACTIONS_LIST\":\r\n      return {\r\n        ...state,\r\n        transactions: payload,\r\n      }\r\n    case \"TRANSACTIONS:REMOVE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter((obj) => obj._id !== payload),\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","var map = {\n\t\"./\": 4,\n\t\"./exchangeRate\": 16,\n\t\"./exchangeRate.js\": 16,\n\t\"./index\": 4,\n\t\"./index.js\": 4,\n\t\"./transactions\": 17,\n\t\"./transactions.js\": 17\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 32;","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnchancers(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","const actions = {\r\n  setExchangeRate: (rate) => ({\r\n    type: \"EXCHANGE_RATE:SET_EXCHANGE_RATE\",\r\n    payload: rate,\r\n  }),\r\n}\r\n\r\nexport default actions\r\n","const actions = {\r\n  setTransactionsList: (transaction) => ({\r\n    type: \"TRANSACTIONS:SET_TRANSACTIONS_LIST\",\r\n    payload: transaction,\r\n  }),\r\n  removeTransaction: (id) => ({\r\n    type: \"TRANSACTIONS:REMOVE_TRANSACTION\",\r\n    payload: id,\r\n  }),\r\n}\r\n\r\nexport default actions\r\n","import React from \"react\"\r\n\r\nimport \"./transaction.scss\"\r\n\r\nconst Transactions = ({\r\n  onNameChange,\r\n  onAmountChange,\r\n  onTransactionAdded,\r\n  name,\r\n  amount,\r\n}) => {\r\n  return (\r\n    <form className=\"transaction\" onSubmit={onTransactionAdded}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"transaction__name\"\r\n        placeholder=\"Transaction name\"\r\n        onChange={(e) => {\r\n          onNameChange(e.target.value)\r\n        }}\r\n        value={name}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        className=\"transaction__amount\"\r\n        placeholder=\"0.00 Euro\"\r\n        step=\"0.01\"\r\n        onChange={(e) => {\r\n          onAmountChange(e.target.value)\r\n        }}\r\n        value={amount}\r\n      />\r\n      <input type=\"submit\" className=\"transaction__add\" value=\"Add\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import React from \"react\"\r\n\r\nimport \"./exchangerate.scss\"\r\n\r\nconst ExchangeRate = ({ pln, onRateChange }) => {\r\n  return (\r\n    <div className=\"exchange-rate\">\r\n      <div className=\"exchange-rate__currency\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"exchange-rate__input\"\r\n          defaultValue=\"1.00\"\r\n          readOnly\r\n        />\r\n        <p className=\"exchange-rate__description\">euro</p>\r\n      </div>\r\n      <div className=\"exchange-rate__currency\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"exchange-rate__input\"\r\n          step=\"0.01\"\r\n          value={pln}\r\n          onChange={onRateChange}\r\n        />\r\n        <p className=\"exchange-rate__description\">pln</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExchangeRate\r\n","import React from \"react\"\r\nimport shortid from \"shortid\"\r\n\r\nimport \"./transactionslist.scss\"\r\n\r\nconst TransactionsList = ({ transactionsList, rate, removeTransaction }) => {\r\n  return (\r\n    <ul className=\"transactions-list\">\r\n      {transactionsList.map((item) => (\r\n        <li className=\"transactions-list__item\" key={shortid.generate()}>\r\n          <div className=\"transactions-list__title\">{item.title}</div>\r\n          <div className=\"transactions-list__total-euro\">EURO: {item.euro}</div>\r\n          <div className=\"transactions-list__total-pln\">\r\n            PLN: {Number((item.euro * rate).toFixed(2))}\r\n          </div>\r\n          <button\r\n            className=\"transactions-list__remove\"\r\n            onClick={() => {\r\n              removeTransaction(item._id)\r\n            }}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TransactionsList\r\n","import React from \"react\"\r\nimport shortid from \"shortid\"\r\n\r\nimport \"./largestTotal.scss\"\r\n\r\nconst LargestTotal = ({ largestTotal, rate }) => {\r\n  return (\r\n    <div className=\"largest-total\">\r\n      {largestTotal.map((item) => (\r\n        <li className=\"transactions-list__item\" key={shortid.generate()}>\r\n          <div className=\"transactions-list__title\">{item.title}</div>\r\n          <div className=\"transactions-list__total-euro\">EURO: {item.euro}</div>\r\n          <div className=\"transactions-list__total-pln\">\r\n            PLN: {Number((item.euro * rate).toFixed(2))}\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LargestTotal\r\n","import React from \"react\"\r\n\r\nimport \"./totalamount.scss\"\r\n\r\nconst TotalAmount = ({ totalAmount, rate }) => {\r\n  return (\r\n    <div className=\"total-amount\">\r\n      <div className=\"total-amount__currency\">\r\n        <div className=\"total-amount__title\">Total amount transactions:</div>\r\n        <span className=\"total-amount__description\">\r\n          {totalAmount} (EURO) / {Number((totalAmount * rate).toFixed(2))} (PLN)\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TotalAmount\r\n","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { transactionsActions } from \"../../redux/actions\"\r\nimport { Transaction as BaseTransaction } from \"../../components\"\r\n\r\nconst Transactions = ({ setTransactionsList, transactions }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [amount, setAmount] = useState(0)\r\n\r\n  const onTransactionAdded = (event) => {\r\n    if (name.length > 0) {\r\n      setTransactionsList([\r\n        ...transactions,\r\n        { _id: new Date().getTime(), title: name, euro: +amount },\r\n      ])\r\n      setName(\"\")\r\n      setAmount(\"\")\r\n    }\r\n    event.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <BaseTransaction\r\n      onNameChange={setName}\r\n      onAmountChange={setAmount}\r\n      onTransactionAdded={onTransactionAdded}\r\n      name={name}\r\n      amount={amount}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  ({ transactions }) => ({\r\n    transactions: transactions.transactions,\r\n  }),\r\n  transactionsActions\r\n)(Transactions)\r\n","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { exchangeRateActions } from \"../../redux/actions\"\r\nimport { ExchangeRate as BaseRate } from \"../../components\"\r\n\r\nconst ExchangeRate = ({ pln, setExchangeRate }) => {\r\n  const [rate, setRate] = useState(pln)\r\n\r\n  const onRateChange = (e) => {\r\n    setRate(e.target.value)\r\n    setExchangeRate(e.target.value)\r\n  }\r\n  return <BaseRate pln={rate} onRateChange={onRateChange} />\r\n}\r\n\r\nexport default connect(\r\n  ({ exchangeRate }) => ({ pln: exchangeRate.rate }),\r\n  exchangeRateActions\r\n)(ExchangeRate)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { transactionsActions } from \"../../redux/actions\"\r\nimport { TransactionsList as BaseTransactionsList } from \"../../components\"\r\n\r\nconst TransactionsList = ({ transactions, rate, removeTransaction }) => {\r\n  return (\r\n    <BaseTransactionsList\r\n      transactionsList={transactions}\r\n      rate={rate}\r\n      removeTransaction={removeTransaction}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  ({ transactions, exchangeRate }) => ({\r\n    transactions: transactions.transactions,\r\n    rate: exchangeRate.rate,\r\n  }),\r\n  transactionsActions\r\n)(TransactionsList)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { TotalAmount as BaseTotalAmount } from \"../../components\"\r\n\r\nconst TotalAmount = ({ totalAmount, rate }) => {\r\n  return <BaseTotalAmount totalAmount={totalAmount} rate={rate} />\r\n}\r\n\r\nconst total = (totalAmount) => {\r\n  return totalAmount.length > 0\r\n    ? totalAmount.reduce((sum, current) => sum + +current, 0)\r\n    : 0\r\n}\r\n\r\nexport default connect(({ transactions, exchangeRate }) => ({\r\n  totalAmount: total(transactions.transactions.map((item) => item.euro)),\r\n  rate: exchangeRate.rate,\r\n}))(TotalAmount)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { LargestTotal as BaseLargestTotal } from \"../../components\"\r\n\r\nconst LargestTotal = ({ transactions, rate }) => {\r\n  return <BaseLargestTotal rate={rate} largestTotal={transactions} />\r\n}\r\n\r\nexport default connect(({ transactions, exchangeRate }) => ({\r\n  rate: exchangeRate.rate,\r\n  transactions: transactions.transactions.filter(\r\n    (item) =>\r\n      +item.euro ===\r\n      Math.max(...transactions.transactions.map((item) => +item.euro))\r\n  ),\r\n}))(LargestTotal)\r\n","import React from \"react\"\n\nimport {\n  ExchangeRate,\n  Transaction,\n  TransactionsList,\n  TotalAmount,\n  LargestTotal,\n} from \"./containers\"\nimport \"./style/app.scss\"\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <ExchangeRate />\n      <Transaction />\n      <div className=\"wrapper-transaction\">\n        <TransactionsList />\n        <LargestTotal />\n      </div>\n      <TotalAmount />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"antd/dist/antd.css\"\nimport { Provider } from \"react-redux\"\n\nimport store from \"./redux/store\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}